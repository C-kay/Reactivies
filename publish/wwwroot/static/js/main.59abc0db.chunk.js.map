{"version":3,"sources":["app/api/agent.ts","app/util/util.ts","app/stores/activityStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/userStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivitiyListItem.tsx","features/activities/dashboard/ActivityList.tsx","app/layout/LoadingComponent.tsx","features/activities/dashboard/ActivityDashboard.tsx","features/activities/dashboard/form/ErrorMessage.tsx","features/activities/dashboard/form/TextInput.tsx","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/HomePage.tsx","app/models/activity.ts","features/activities/dashboard/form/TextAreaInput.tsx","features/activities/dashboard/form/SelectInput.tsx","features/activities/dashboard/form/options/categoryOptions.ts","features/activities/dashboard/form/DateInput.tsx","features/activities/dashboard/form/ActivityForm.tsx","features/activities/dashboard/details/ActivityDetailedChat.tsx","features/activities/dashboard/details/ActivityDetailedHeader.tsx","features/activities/dashboard/details/ActivityDetailedInfo.tsx","features/activities/dashboard/details/ActivityDetailedSidebar.tsx","features/activities/dashboard/details/ActivityDetails.tsx","app/layout/NotFound.tsx","app/common/modals/ModalContainer.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","data","history","push","method","errors","hasOwnProperty","responseBody","url","get","then","body","post","delete","activities","Activities","list","details","id","create","activity","update","attend","unattend","User","current","login","user","register","setActivityProps","date","Date","isGoing","attendees","some","a","username","isHosting","isHost","createAttendee","displayName","image","ActivityStore","observable","ref","rootStore","getActivity","activityRegistry","this","makeObservable","sortedActivities","sort","b","getTime","Object","entries","reduce","toISOString","split","groupActivitiesByDate","Array","from","values","Map","action","activityId","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","commonStore","configureLogging","LogLevel","Information","build","start","console","log","state","invoke","catch","on","comment","selectedActivity","comments","info","stop","computed","loadingInitial","agent","forEach","userStore","set","submitting","attendee","event","target","currentTarget","name","loading","filter","CommonStore","reaction","setItem","removeItem","appLoaded","ModalStore","shallow","open","content","modal","UserStore","setToken","modalStore","closeModal","RootStore","activityStore","RootStoreContext","createContext","observer","useContext","logout","Menu","fixed","inverted","Container","Item","header","as","NavLink","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","ActivityListItemAttendees","List","horizontal","map","key","Popup","trigger","size","circular","ActivitiyListItem","host","x","Segment","Group","Content","Header","title","Description","Label","basic","color","Icon","format","venue","city","clearing","description","floated","activitiesByDate","group","divided","LoadingComponent","Dimmer","active","Loader","loadActivities","useEffect","Grid","Column","width","ErrorMessage","Message","statusText","keys","erros","length","flat","err","i","TextInput","input","type","placeholder","meta","touched","Form","Field","validate","combineValidators","email","isRequired","password","LoginForm","onSubmit","FORM_ERROR","render","handleSubmit","submitError","invalid","pristine","dirtyFieldsSinceLastSubmit","textAlign","component","disabled","fluid","displayname","RegisterForm","isLoggedIn","openModal","vertical","className","marginBottom","marginTop","ActivityFormValues","init","category","time","assign","TextAreaInput","SelectInput","options","Select","value","onChange","e","DateInput","composeValidators","hasLengthGreaterThan","match","createActivity","editActivity","loadActivity","clearActivity","useState","setActivity","setLoading","params","finally","handleInputChange","initialValues","dateAndTime","timeString","getHours","getMinutes","year","getFullYear","month","getMonth","day","getDate","dateString","combineDateAndTime","newActivity","uuid","row","widths","createHubConnection","stopConnection","addComment","attached","border","Comment","Avatar","Author","Metadata","formatDistance","createdAt","Text","Actions","Action","form","reset","rows","labelPosition","primary","activityImageStyle","activityImageTextStyle","bottom","left","height","cancelAttendance","attendActivity","padding","ActivityDetailedInfo","verticalAlign","secondary","relaxed","ribbon","Extra","NotFound","Inline","Modal","onClose","withRouter","location","setAppLoaded","getUser","exact","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","children","pathname","scrollTo","dateFnsLocalizer","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59abc0db.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport { history } from \"../../index\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure Api is running!\");\r\n  }\r\n\r\n  const { status, data, config } = error.response;\r\n  if (status === 400) {\r\n    history.push(\"/notfound\");\r\n  }\r\n\r\n  if (\r\n    status === 404 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\");\r\n  }\r\n\r\n  if (status === 500) {\r\n    toast.error(\"Server errror - check the terminal for more info!\");\r\n  }\r\n\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\n// const sleep = (ms: number) => (response: AxiosResponse) => {\r\n//   return new Promise<AxiosResponse>((resolve) =>\r\n//     setTimeout(() => resolve(response), ms)\r\n//   );\r\n// };\r\nconst request = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios.get(url, body).then(responseBody),\r\n  del: (url: string) => axios.delete(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (): Promise<IActivity[]> => request.get(\"/activities\"),\r\n  details: (id: string) => request.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => request.post(`/activities`, activity),\r\n  update: (activity: IActivity) =>\r\n    request.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => request.del(`/activities/${id}`),\r\n  attend: (id: string) => request.post(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string) => request.del(`/activities/${id}/attend`),\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => request.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    request.post(\"/user/login\", user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    request.post(\"/user/register\", user),\r\n};\r\n\r\nconst activities = { Activities, User };\r\nexport default activities;\r\n","import { IActivity, IAttendee } from \"../models/activity\";\r\nimport { IUser } from \"../models/user\";\r\n\r\nexport const combineDateAndTime= (time: Date , date:Date)=>{\r\n    const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\r\n\r\n    const year = date.getFullYear();\r\n    const month =date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const dateString = `${year}-${month}-${day}`;\r\n\r\n    return new Date (dateString + ' '+ timeString);\r\n}\r\n\r\nexport const setActivityProps = (activity: IActivity, user: IUser) =>{\r\n    activity.date = new Date(activity.date);\r\n    activity.isGoing = activity.attendees.some(\r\n        a => a.username === user.username\r\n      );\r\n      activity.isHosting = activity.attendees.some(\r\n        a => a.username === user.username && a.isHost\r\n      )\r\n}\r\n\r\nexport const createAttendee = (user: IUser): IAttendee =>{\r\n  return {\r\n    displayName: user.displayName,\r\n    isHost: false,\r\n    username: user.username,\r\n    image: user.image!\r\n  }\r\n}\r\n\r\n\r\n","import {action, observable, computed, makeObservable} from 'mobx';\r\nimport { SyntheticEvent } from 'react';\r\nimport agent from '../api/agent';\r\nimport { IActivity } from '../models/activity';\r\nimport {history} from '../../index'\r\nimport { toast } from 'react-toastify';\r\nimport { RootStore } from './rootStore';\r\nimport { createAttendee, setActivityProps } from '../util/util';\r\nimport { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\n\r\nexport default class ActivityStore {\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore){\r\n    this.rootStore = rootStore;\r\n    makeObservable(this);\r\n  }\r\n\r\n\r\n  @observable activityRegistry = new Map();\r\n  @observable selectedActivity: IActivity | null = null;\r\n  @observable loadingInitial = false;\r\n  @observable submitting = false;\r\n  @observable target ='';\r\n  @observable loading = false;\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n\r\n  @action createHubConnection = (activityId: string) => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.commonStore.token!\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(()=> console.log(this.hubConnection!.state))\r\n      .then(()=> {\r\n        console.log('Attempting to join group');\r\n        this.hubConnection!.invoke('AddToGroup', activityId);\r\n      })\r\n      .catch(error => console.log('Error establishing connection: ', error));\r\n\r\n    this.hubConnection.on('ReceiveComment', comment =>{\r\n      this.selectedActivity!.comments.push(comment);\r\n    });\r\n\r\n    this.hubConnection.on('Send', message =>{\r\n      toast.info(message);\r\n    })\r\n\r\n  }\r\n\r\n  @action stopConnection= ()=>{\r\n    this.hubConnection!.invoke('RemoveFromGroup', this.selectedActivity!.id)\r\n      .then(()=>{\r\n        this.hubConnection!.stop();\r\n      })\r\n      .then(()=> console.log('Connetion stopped'))\r\n      .catch((error)=> console.log(error));\r\n    \r\n  }\r\n\r\n  @action addComment= async (values: any)=>{\r\n    values.activityId = this.selectedActivity?.id;\r\n    try{\r\n      await this.hubConnection!.invoke('SendComment', values)\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  @computed get activitiesByDate() {\r\n    // return Array.from(this.activityRegistry.values()).sort(\r\n    //   (a, b) => a.date.getTime() - b.date.getTime()\r\n    // );\r\n    return this.groupActivitiesByDate(Array.from(this.activityRegistry.values()));\r\n  }\r\n\r\n  groupActivitiesByDate(activities: IActivity[]){\r\n    const sortedActivities = activities.sort(\r\n      (a, b) => a.date.getTime() - b.date.getTime()\r\n    );\r\n    return Object.entries(sortedActivities.reduce((activities, activity) =>{\r\n      const date = activity.date.toISOString().split('T')[0];\r\n      activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n      return activities;\r\n    }, {} as {[key:string]: IActivity[]}));\r\n  }\r\n\r\n  @action loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    \r\n    try {\r\n      const activities = await agent.Activities.list();\r\n      activities.forEach((activity) => {\r\n        setActivityProps(activity, this.rootStore.userStore.user!);\r\n\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      this.loadingInitial = false;\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action selectActivity = (id: string) => {\r\n    this.selectedActivity = this.activityRegistry.get(id);\r\n  };\r\n\r\n  @action loadActivity= async (id: string)=>{\r\n    let activity = this.getActivity(id);\r\n    if(activity){\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    }else{\r\n      this.loadingInitial = true;\r\n      try{\r\n        activity = await agent.Activities.details(id);\r\n        setActivityProps(activity, this.rootStore.userStore.user!);\r\n        this.selectedActivity =activity;\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.loadingInitial = false;\r\n        return activity;\r\n      }catch(error){\r\n        this.loadingInitial = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  @action clearActivity= ()=>{\r\n    this.selectedActivity = null;\r\n  }\r\n\r\n  getActivity=(id: string)=>{\r\n    return this.activityRegistry.get(id);\r\n  }\r\n\r\n  @action createActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      this.activityRegistry.set(activity.id, activity);\r\n      const attendee = createAttendee(this.rootStore.userStore.user!);\r\n      attendee.isHost = true;\r\n      let attendees =[];\r\n      attendees.push(attendee);\r\n      activity.attendees= attendees;\r\n      activity.comments =[];\r\n      activity.isHosting =true;\r\n      this.selectedActivity = activity;\r\n      this.submitting = false;\r\n\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      this.submitting = false;\r\n      toast.error('Problem submitting data');\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  @action editActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      this.activityRegistry.set(activity.id, activity);\r\n      this.selectedActivity = activity;\r\n      this.submitting = false;\r\n\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.submitting = false;\r\n    }\r\n  };\r\n\r\n  @action deleteActivity = async (event: SyntheticEvent<HTMLButtonElement>,activity: IActivity) =>{\r\n    this.submitting =true\r\n    this.target = event.currentTarget.name;\r\n    try{\r\n        await agent.Activities.delete(activity.id);\r\n        this.activityRegistry.delete(activity.id);\r\n        this.submitting = false;\r\n    }catch(error){\r\n        console.log(error);\r\n        this.submitting = false;\r\n        this.target= '';\r\n    }\r\n    \r\n  }\r\n\r\n  @action attendActivity = async () =>{\r\n    const attendee = createAttendee(this.rootStore.userStore.user!);\r\n    this.loading = true;\r\n    try{\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      if(this.selectedActivity){\r\n        this.selectedActivity.attendees.push(attendee);\r\n        this.selectedActivity.isGoing = true;\r\n        this.activityRegistry.set(this.selectedActivity.id, this.selectedActivity);\r\n        this.loading = false;\r\n      }\r\n    }catch(error){\r\n      this.loading = false;\r\n      toast.error('Problem signing up to activity');\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  @action cancelAttendance = async ()=>{\r\n    this.loading = true;\r\n    try{\r\n      await agent.Activities.unattend(this.selectedActivity!.id);\r\n      if(this.selectedActivity){\r\n        this.selectedActivity.attendees = this.selectedActivity.attendees.filter(\r\n          a => a.username !== this.rootStore.userStore.user!.username\r\n        );\r\n        this.selectedActivity.isGoing =false;\r\n        this.activityRegistry.set(this.selectedActivity.id, this.selectedActivity);\r\n        this.loading = false;\r\n      }\r\n    }catch(error){\r\n      toast.error(\"Problem canceling attendance\");\r\n      this.loading = false;\r\n    }\r\n    \r\n    \r\n  }\r\n}\r\n\r\n","import { action, makeObservable, observable, reaction } from \"mobx\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class CommonStore {\r\n    rootStore: RootStore;\r\n\r\n    constructor(rootStore : RootStore){\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem(\"jwt\", token);\r\n                }else{\r\n                    window.localStorage.removeItem(\"jwt\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    @observable token: string | null = window.localStorage.getItem('jwt');\r\n    @observable appLoaded = false;\r\n\r\n    @action setToken = (token: string | null) => {\r\n        //when we set the token, the reaction above will run\r\n        this.token = token;\r\n    }\r\n\r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { action, makeObservable, observable } from \"mobx\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class ModalStore {\r\n    rootStore: RootStore;\r\n\r\n    constructor(rootStore : RootStore){\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n\r\n    @observable.shallow modal ={\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    @action openModal = (content: any) =>{\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    @action closeModal= ()=>{\r\n        this.modal.open = false;\r\n        this.modal.body= null;\r\n    }\r\n}","import { action, computed, makeObservable, observable } from \"mobx\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport agent from '../api/agent';\r\nimport { RootStore } from \"./rootStore\";\r\nimport {history} from  \"../../index\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n    makeObservable(this);\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @action login = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.User.login(values);\r\n      this.user = user;\r\n      console.log(this.user);\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @action register = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.User.register(values);\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @action getUser= async ()=>{\r\n    try{\r\n      const user = await agent.User.current();\r\n      this.user = user;\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  @action logout = () => {\r\n    this.rootStore.commonStore.setToken(null);\r\n    console.log(this.user);\r\n    this.user = null;\r\n    history.push('/');\r\n  }\r\n\r\n\r\n}","import { makeObservable, observable } from \"mobx\";\r\nimport { createContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\nexport class RootStore{\r\n\r\n\r\n    @observable activityStore: ActivityStore;\r\n    @observable userStore: UserStore;\r\n    @observable commonStore: CommonStore;\r\n    @observable modalStore: ModalStore;\r\n\r\n    constructor() {\r\n        this.activityStore = new ActivityStore(this);\r\n        this.userStore = new UserStore(this);\r\n        this.commonStore = new CommonStore(this);\r\n        this.modalStore = new ModalStore(this);\r\n        makeObservable(this);\r\n        \r\n    }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\n\r\nconst NavBar : React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const{user, logout} = rootStore.userStore;\r\n\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\"></Menu.Item>\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src={user.image || \"/assets/user.png\"} />\r\n            <Dropdown pointing=\"top left\" text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profile/username`}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import React from 'react'\r\nimport { Image, List, Popup } from 'semantic-ui-react'\r\nimport { IAttendee } from '../../../app/models/activity'\r\n\r\nconst ActivityListItemAttendees : React.FC<{attendees: IAttendee[]}> = ({attendees}) => {\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map((attendee)=>(\r\n                <List.Item key={attendee.username}>\r\n                    <Popup\r\n                        header={attendee.displayName}\r\n                        trigger={<Image size='mini' circular src={attendee.image || '/assets/user.png'}/>}\r\n                    />\r\n                </List.Item>\r\n            ))}\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default ActivityListItemAttendees\r\n","import { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport ActivityListItemAttendees from './ActivityListItemAttendees';\r\n\r\nconst ActivitiyListItem : React.FC<{activity:IActivity}>= ({activity}) => {\r\n  const host = activity.attendees.filter(x => x.isHost)[0];\r\n    return (\r\n      <Segment.Group>\r\n        <Segment>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image size=\"tiny\" circular src={host.image || \"/assets/user.png\"} />\r\n              <Item.Content>\r\n                <Item.Header as={Link} to={`/activites/${activity.id}`}>{activity.title}</Item.Header>\r\n                <Item.Description>Hosted by {host.username}</Item.Description>\r\n                {activity.isHosting &&\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"orange\"\r\n                    content=\"You are hosting this activity\"\r\n                  />\r\n                </Item.Description>}\r\n                {activity.isGoing &&\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"green\"\r\n                    content=\"You are going to this activity\"\r\n                  />\r\n                </Item.Description>}\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n        <Segment>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.date, \"h:mm a\")}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}, {activity.city}\r\n        </Segment>\r\n        <Segment>\r\n          <ActivityListItemAttendees attendees={activity.attendees} />\r\n        </Segment>\r\n        <Segment clearing>\r\n          <span>{activity.description}</span>\r\n          <Button\r\n            as={Link}\r\n            to={`/activities/${activity.id}`}\r\n            floated=\"right\"\r\n            content=\"View\"\r\n            color=\"blue\"\r\n          />\r\n          {/* <Button\r\n              name={activity.id}\r\n              loading={target === activity.id && submitting}\r\n              onClick={(e) => deleteActivity(e, activity)}\r\n              floated=\"right\"\r\n              content=\"Remove\"\r\n              color=\"red\"\r\n            /> */}\r\n        </Segment>\r\n      </Segment.Group>\r\n    );\r\n}\r\n\r\nexport default ActivitiyListItem\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { Fragment, useContext } from 'react';\r\nimport { Item, Label} from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport ActivityListItem from './ActivitiyListItem'\r\n\r\n\r\nconst ActivityList : React.FC= () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {activitiesByDate} = rootStore.activityStore;\r\n\r\n    \r\n    return (\r\n      <Fragment>\r\n        {activitiesByDate.map(([group, activities]) => (\r\n          <Fragment>\r\n            <Label key={group} size=\"large\" color=\"blue\">\r\n              {group}\r\n            </Label>\r\n\r\n            <Item.Group divided>\r\n              {activities.map((activity) => {\r\n                console.log(activity);\r\n                return <ActivityListItem activity={activity} />;\r\n              })}\r\n            </Item.Group>\r\n          </Fragment>\r\n        ))}\r\n      </Fragment>\r\n    );\r\n\r\n  \r\n};\r\n\r\nexport default observer(ActivityList);\r\n","import React from 'react'\r\nimport { Dimmer, Image, Loader, Segment } from 'semantic-ui-react';\r\n\r\nexport const LoadingComponent : React.FC<{inverted?: boolean, content?: string}> = ({inverted=true, content}) => {\r\n    return (\r\n      <Segment>\r\n        <Dimmer active inverted={inverted}>\r\n          <Loader content={content} />\r\n        </Dimmer>\r\n\r\n        <Image src='/images/wireframe/short-paragraph.png' />\r\n      </Segment>\r\n    );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport ActivityList from \"./ActivityList\";\r\n\r\nimport { LoadingComponent } from '../../../app/layout/LoadingComponent';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const{loadActivities, loadingInitial} = rootStore.activityStore;\r\n  \r\n  useEffect(()=>{\r\n    loadActivities();\r\n  }, [loadActivities]);\r\n  \r\n  if(loadingInitial) return <LoadingComponent content=\"Looading activities...\"/>;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityList/>\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={6}>\r\n        Activity Filters\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import { AxiosResponse } from 'axios'\r\nimport React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\ninterface IProps{\r\n    error: AxiosResponse,\r\n    text?: string\r\n}\r\n\r\nconst ErrorMessage : React.FC<IProps> = ({error, text}) => {\r\n    return (\r\n        <Message>\r\n            <Message.Header>{error.statusText}</Message.Header>\r\n            {error.data && Object.keys(error.data.erros).length > 0 && (\r\n                <Message.List>\r\n                    {Object.values(error.data.errors).flat().map((err:any,i)=>(\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n            {text && <Message.Content content={text} />}\r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React from 'react'\r\nimport { FieldRenderProps } from 'react-final-form'\r\nimport { Form, FormFieldProps, Label} from 'semantic-ui-react'\r\n\r\ninterface IProps extends FieldRenderProps<string, HTMLElement>, FormFieldProps {}\r\n\r\nexport const TextInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  type,\r\n  placeholder,\r\n  meta: { touched, error },\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <input {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n","import { FORM_ERROR } from 'final-form';\r\nimport React, { useContext } from 'react';\r\nimport {Form as FinalForm, Field} from 'react-final-form';\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Button, Form, Header } from 'semantic-ui-react';\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport ErrorMessage from '../activities/dashboard/form/ErrorMessage';\r\nimport { TextInput } from '../activities/dashboard/form/TextInput';\r\n\r\nconst validate = combineValidators({\r\n    email: isRequired('email'),\r\n    password: isRequired('password')\r\n})\r\n\r\nexport const LoginForm = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext);\r\n  const{login} = rootStore.userStore;\r\n    return (\r\n      <FinalForm\r\n        validate={validate}\r\n        onSubmit={(values: IUserFormValues) =>\r\n          login(values).catch((error) => ({\r\n            [FORM_ERROR]: error,\r\n          }))\r\n        }\r\n        render={({\r\n          handleSubmit,\r\n          submitting,\r\n          submitError,\r\n          invalid,\r\n          pristine,\r\n          dirtyFieldsSinceLastSubmit,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit} error>\r\n            <Header\r\n              as=\"h2\"\r\n              content=\"Login to Reactivities\"\r\n              color=\"teal\"\r\n              textAlign=\"center\"\r\n            />\r\n            <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n            <Field\r\n              name=\"password\"\r\n              component={TextInput}\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n            />\r\n            {submitError && !dirtyFieldsSinceLastSubmit && (\r\n              // <Label color=\"red\" basic content={submitError.statusText} />\r\n              <ErrorMessage \r\n                error={submitError}\r\n                text=\"Invalid emial or password\"\r\n              />\r\n            )}\r\n            <br />\r\n            <Button\r\n              loading={submitting}\r\n              disabled={invalid || pristine || !dirtyFieldsSinceLastSubmit}\r\n              color=\"teal\"\r\n              content=\"Login\"\r\n              fluid\r\n            />\r\n            {/* <pre>{JSON.stringify(form.getState(), null, 2)}</pre> */}\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n}\r\n","import { FORM_ERROR } from 'final-form';\r\nimport React, { useContext } from 'react';\r\nimport {Form as FinalForm, Field} from 'react-final-form';\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Button, Form, Header } from 'semantic-ui-react';\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport ErrorMessage from '../activities/dashboard/form/ErrorMessage';\r\nimport { TextInput } from '../activities/dashboard/form/TextInput';\r\n\r\nconst validate = combineValidators({\r\n    username: isRequired('username'),\r\n    displayname: isRequired('displayname'),\r\n    email: isRequired('email'),\r\n    password: isRequired('password')\r\n})\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext);\r\n    const{register} = rootStore.userStore;\r\n    return (\r\n      <FinalForm\r\n        validate={validate}\r\n        onSubmit={(values: IUserFormValues) =>\r\n          register(values).catch((error) => ({\r\n            [FORM_ERROR]: error,\r\n          }))\r\n        }\r\n        render={({\r\n          handleSubmit,\r\n          submitting,\r\n          submitError,\r\n          invalid,\r\n          pristine,\r\n          dirtyFieldsSinceLastSubmit,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit} error>\r\n            <Header\r\n              as=\"h2\"\r\n              content=\"Signup to Reactivities\"\r\n              color=\"teal\"\r\n              textAlign=\"center\"\r\n            />\r\n            <Field name=\"username\" component={TextInput} placeholder=\"Username\" />\r\n            <Field name=\"displayname\" component={TextInput} placeholder=\"Displayname\" />\r\n            <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n            <Field\r\n              name=\"password\"\r\n              component={TextInput}\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n            />\r\n            {submitError && !dirtyFieldsSinceLastSubmit && (\r\n              // <Label color=\"red\" basic content={submitError.statusText} />\r\n              <ErrorMessage \r\n                error={submitError}\r\n                //text={JSON.stringify(submitError.data.errors)}\r\n              />\r\n            )}\r\n            <br />\r\n            <Button\r\n              loading={submitting}\r\n              disabled={invalid || pristine || !dirtyFieldsSinceLastSubmit}\r\n              color=\"teal\"\r\n              content=\"Register and Login\"\r\n              fluid\r\n            />\r\n            {/* <pre>{JSON.stringify(form.getState(), null, 2)}</pre> */}\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport { LoginForm } from '../user/LoginForm';\r\nimport RegisterForm from '../user/RegisterForm';\r\n\r\nconst HomePage = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {isLoggedIn, user} = rootStore.userStore\r\n    const {openModal } = rootStore.modalStore;\r\n    return (\r\n      <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n        <Container text>\r\n          <Header as=\"h1\" inverted>\r\n            <Image\r\n              size=\"massive\"\r\n              src=\"/assets/logo.png\"\r\n              alt=\"logo\"\r\n              style={{ marginBottom: 12 }}\r\n            />\r\n            Reactivities\r\n          </Header>\r\n          <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n          {isLoggedIn && user ? (\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <h1>Welcome {user.displayName}</h1>\r\n              <h3>\r\n                Go to <Link to=\"/activities\">Activities</Link>\r\n              </h3>\r\n            </Container>\r\n          ) : (\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <h1>Home Page</h1>\r\n              <h3>\r\n                <Button onClick={() => openModal(<LoginForm />)}>Login</Button>\r\n              </h3>\r\n              <h3>\r\n                <Button onClick={() => openModal(<RegisterForm />)}>\r\n                  Register\r\n                </Button>\r\n              </h3>\r\n            </Container>\r\n          )}\r\n        </Container>\r\n      </Segment>\r\n    );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","\r\nexport interface IActivity{\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    category: string;\r\n    date: Date;\r\n    city: string;\r\n    venue: string;\r\n    isGoing: boolean;\r\n    isHosting: boolean;\r\n    attendees: IAttendee[];\r\n    comments: IComment[];\r\n\r\n}\r\n\r\nexport interface IComment{\r\n    id: string;\r\n    createdAt: Date;\r\n    body: string;\r\n    username: string;\r\n    displayName: string;\r\n    image: string;\r\n}\r\n\r\nexport interface IActivityFormValues extends Partial<IActivity>{\r\n    time?:Date;\r\n\r\n}\r\n\r\nexport class ActivityFormValues implements IActivityFormValues{\r\n    id?: string =undefined;\r\n    title: string ='';\r\n    description: string='';\r\n    category: string='';\r\n    date?: Date =undefined;\r\n    time?: Date=undefined;\r\n    city: string='';\r\n    venue: string='';\r\n\r\n    constructor(init?: IActivityFormValues) {\r\n        if(init && init.date){\r\n            init.time = init.date;\r\n        }\r\n        Object.assign(this, init);\r\n        \r\n    }\r\n}\r\n\r\nexport interface IAttendee{\r\n    username: string;\r\n    displayName:string;\r\n    image: string;\r\n    isHost: boolean;\r\n}","import React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { Form, FormFieldProps, Label } from 'semantic-ui-react';\r\n\r\ninterface IProps extends FieldRenderProps<string, HTMLElement>, FormFieldProps {}\r\n\r\nexport const TextAreaInput: React.FC<IProps> = ({\r\n    input,\r\n    width,\r\n    type,\r\n    placeholder,\r\n    meta: { touched, error }}) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <textarea {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n          <Label basic color='red'>\r\n              {error}\r\n          </Label>\r\n      )}\r\n  </Form.Field>);\r\n    \r\n}\r\n","import React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { Form, FormFieldProps, Label, Select} from 'semantic-ui-react';\r\n\r\ninterface IProps extends FieldRenderProps<string, HTMLElement>, FormFieldProps {}\r\n\r\nexport const SelectInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  options,\r\n  placeholder,\r\n  meta: { touched, error },\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <Select\r\n        value={input.value}\r\n        onChange={(e,data)=> input.onChange(data.value)}\r\n        placeholder={placeholder}\r\n        options={options}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n","export const category = [\r\n  { key: 'drinks', text: 'Drinks', value: 'drinks' },\r\n  { key: 'culture', text: 'Culture', value: 'culture' },\r\n  { key: 'film', text: 'Film', value: 'film' },\r\n  { key: 'food', text: 'Food', value: 'food' },\r\n  { key: 'music', text: 'Music', value: 'music' },\r\n  { key: 'travel', text: 'Travel', value: 'travel' }\r\n];","import React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { Form, FormFieldProps, Label } from 'semantic-ui-react';\r\n\r\ninterface IProps extends FieldRenderProps<Date, HTMLElement>, FormFieldProps {}\r\n\r\nconst DateInput : React.FC<IProps> = ({\r\n    input,\r\n    date=false,\r\n    time=false,\r\n    width,\r\n    placeholder,\r\n    meta: { touched, error }  }) => {\r\n    return (\r\n      <Form.Field error={touched && !!error} width={width}>\r\n        {/* <DateTimePicker \r\n            onBlur={input.onBlur} // allows warnings\r\n            onKeyDown={(e)=> e.preventDefault()} // prevents typing in box\r\n            placeholder={placeholder}\r\n            value={input.value || null}\r\n            onChange={input.omChange}\r\n           \r\n            {...rest}\r\n        /> */}\r\n\r\n        {touched && error && (\r\n          <Label basic color=\"red\">\r\n            {error}\r\n          </Label>\r\n        )}\r\n      </Form.Field>\r\n    );\r\n}\r\n\r\nexport default DateInput\r\n","import React, { FormEvent, useContext, useEffect, useState } from 'react'\r\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react'\r\nimport {ActivityFormValues, IActivityFormValues } from '../../../../app/models/activity'\r\nimport {v4 as uuid} from \"uuid\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport {Form as FinalForm, Field} from 'react-final-form';\r\nimport { TextInput } from '../form/TextInput';\r\nimport { TextAreaInput } from '../form/TextAreaInput';\r\nimport { SelectInput } from './SelectInput';\r\nimport { category } from './options/categoryOptions';\r\nimport DateInput from './DateInput';\r\nimport { combineDateAndTime } from '../../../../app/util/util';\r\nimport {combineValidators, composeValidators, hasLengthGreaterThan, isRequired} from 'revalidate';\r\nimport { RootStoreContext } from '../../../../app/stores/rootStore';\r\n\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({message: 'The event title is required'}),\r\n  category: isRequired('Category'),\r\n  description: composeValidators(\r\n    isRequired('Description'),\r\n    hasLengthGreaterThan(4)({message: 'Descrioption needs to be aat least 5 characters'}),\r\n  )(),\r\n  city: isRequired('City'),\r\n  venue: isRequired('Venue'),\r\n  date: isRequired('Date'),\r\n  time: isRequired('Time')\r\n});\r\n\r\ninterface DetailParams{\r\n  id: string;\r\n}\r\n\r\nconst ActivityForm : React.FC<RouteComponentProps<DetailParams>> = ({match, history}) => {\r\n\r\n \r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createActivity,\r\n    editActivity,\r\n    submitting,\r\n    loadActivity,\r\n    clearActivity,\r\n  } = rootStore.activityStore;\r\n    \r\n  \r\n    const [activity, setActivity]= useState<IActivityFormValues>(new ActivityFormValues());\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n      setLoading(true);\r\n      if(match.params.id) loadActivity(match.params.id).then((activity)=>{\r\n         setActivity(new ActivityFormValues(activity));\r\n      }).finally(()=> setLoading(false));\r\n      return ()=>{\r\n        clearActivity();\r\n      }\r\n    },[loadActivity,clearActivity,match.params.id])\r\n\r\n    // const handleSubmit = ()=>{\r\n    //     if(activity.id.length === 0){\r\n    //       let newActivity={\r\n    //         ...activity,\r\n    //         id: uuid()\r\n    //       }\r\n    //       createActivity(newActivity);\r\n    //     }else{\r\n    //       editActivity(activity).then(()=>{ history.push(`/activities/${activity.id}`)});\r\n    //     }\r\n    // }\r\n\r\n    const handleFinalFormSubmit = (values: any)=>{\r\n\r\n      const dateAndTime = combineDateAndTime(values.date, values.time);\r\n      const {date, time, ...activity} = values;\r\n      activity.date = dateAndTime;\r\n\r\n      if (!activity.id) {\r\n        let newActivity = {\r\n          ...activity,\r\n          id: uuid(),\r\n        };\r\n        createActivity(newActivity);\r\n      } else {\r\n        editActivity(activity);\r\n      }\r\n    }\r\n\r\n    const handleInputChange= (event: FormEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        const {name, value} = event.currentTarget;\r\n        setActivity({...activity, [name]: value});\r\n    }\r\n\r\n    \r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <Segment clearing>\r\n            <FinalForm\r\n              validate={validate}\r\n              loading={loading}\r\n              initialValues={activity}\r\n              onSubmit={handleFinalFormSubmit}\r\n              render={({ handleSubmit, invalid, pristine }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Field\r\n                    onChange={handleInputChange}\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    value={activity.title}\r\n                    component={TextInput}\r\n                  />\r\n                  <Field\r\n                    component={TextAreaInput}\r\n                    row={3}\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                    value={activity.description}\r\n                  />\r\n                  <Field\r\n                    component={SelectInput}\r\n                    options={category}\r\n                    name=\"category\"\r\n                    placeholder=\"Category\"\r\n                    value={activity.category}\r\n                  />\r\n\r\n                  <Form.Group widths={\"equal\"}>\r\n                    <Field\r\n                      component={DateInput}\r\n                      name=\"date\"\r\n                      placeholder=\"Date\"\r\n                      value={activity.date}\r\n                    />\r\n                    <Field\r\n                      component={DateInput}\r\n                      name=\"date\"\r\n                      placeholder=\"Date\"\r\n                      value={activity.date}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Field\r\n                    component={TextInput}\r\n                    name=\"city\"\r\n                    placeholder=\"City\"\r\n                    value={activity.city}\r\n                  />\r\n                  <Field\r\n                    component={TextInput}\r\n                    name=\"venue\"\r\n                    placeholder=\"Venue\"\r\n                    value={activity.venue}\r\n                  />\r\n                  <Button\r\n                    disabled={loading || invalid || pristine}\r\n                    loading={submitting}\r\n                    floated=\"right\"\r\n                    positive\r\n                    type=\"submit\"\r\n                    content=\"Submit\"\r\n                  />\r\n                  <Button\r\n                    disabled={loading}\r\n                    onClick={\r\n                      activity.id\r\n                        ? () => history.push(`/activities/${activity.id}`)\r\n                        : () => history.push(\"/activities\")\r\n                    }\r\n                    floated=\"right\"\r\n                    positive\r\n                    type=\"submit\"\r\n                    content=\"Cancel\"\r\n                  />\r\n                </Form>\r\n              )}\r\n            />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../../app/stores/rootStore\";\r\nimport {Field, Form as FinalForm} from 'react-final-form';\r\nimport { TextAreaInput } from \"../form/TextAreaInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { formatDistance } from \"date-fns\";\r\n\r\nconst ActivityDetailedChat = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const{\r\n    createHubConnection,\r\n    stopConnection,\r\n    addComment,\r\n    selectedActivity: activity\r\n  } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    createHubConnection(activity!.id)\r\n    return () => {\r\n      stopConnection();\r\n    }\r\n  }, [createHubConnection, stopConnection, activity])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          {activity &&\r\n            activity.comments &&\r\n            activity.comments.map((comment) => (\r\n              <Comment key={comment.id}>\r\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n                <Comment.Content>\r\n                  <Comment.Author as={Link} to={`/profile/${comment.username}`}>\r\n                    {comment.displayName}\r\n                  </Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>{formatDistance(comment.createdAt, new Date())}</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>{comment.body}</Comment.Text>\r\n                  <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                  </Comment.Actions>\r\n                </Comment.Content>\r\n              </Comment>\r\n            ))}\r\n          <FinalForm\r\n            onSubmit={addComment}\r\n            render={({ handleSubmit, submitting, form }) => (\r\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\r\n                <Field\r\n                  name=\"body\"\r\n                  component={TextAreaInput}\r\n                  rows={2}\r\n                  placeholder=\"Add comment\"\r\n                />\r\n                <Button\r\n                  content=\"Add Reply\"\r\n                  labelPosition=\"left\"\r\n                  icon=\"edit\"\r\n                  primary\r\n                  loading={submitting}\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedChat);\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../../app/models/activity\";\r\nimport { RootStoreContext } from \"../../../../app/stores/rootStore\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity, history: any}> = ({\r\n  activity,\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user} = rootStore.userStore;\r\n  const {cancelAttendance, attendActivity, loading} = rootStore.activityStore;\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        <Image\r\n          src={`/assets/placeholder.png`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date, \"eeee do MMMM\")}</p>\r\n                <p>\r\n                  Hosted by <strong>{user?.displayName}</strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHosting ? (\r\n          <Button\r\n            as={Link}\r\n            to={`/manage/${activity.id}`}\r\n            color=\"orange\"\r\n            floated=\"right\"\r\n          >\r\n            Manage Event\r\n          </Button>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={cancelAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../../app/models/activity\";\r\n\r\nconst ActivityDetailedInfo : React.FC<{ activity: IActivity }> = ({activity}) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date, 'eeee do MMMM')} at {format(activity.date!, 'h:mm a')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityDetailedInfo;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, List, Item, Label, Image } from 'semantic-ui-react';\r\nimport { IAttendee } from '../../../../app/models/activity';\r\n\r\nconst ActivityDetailedSidebar : React.FC<{attendees: IAttendee[]}> = ({attendees}) =>{\r\n    return (\r\n      <Fragment>\r\n        <Segment\r\n          textAlign=\"center\"\r\n          style={{ border: \"none\" }}\r\n          attached=\"top\"\r\n          secondary\r\n          inverted\r\n          color=\"teal\"\r\n        >\r\n          {attendees.length} People Going\r\n        </Segment>\r\n        <Segment attached>\r\n          <List relaxed divided>\r\n            {attendees.map((attendee) => (\r\n              <Item key={attendee.displayName} style={{ position: \"relative\" }}>\r\n                {attendee.isHost && (\r\n                  <Label\r\n                    style={{ position: \"absolute\" }}\r\n                    color=\"orange\"\r\n                    ribbon=\"right\"\r\n                  >\r\n                    Host\r\n                  </Label>\r\n                )}\r\n                <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n                <Item.Content verticalAlign=\"middle\">\r\n                  <Item.Header as=\"h3\">\r\n                    <Link to={`/profile/${attendee.username}`}>\r\n                      {attendee.displayName}\r\n                    </Link>\r\n                  </Item.Header>\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </List>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default observer(ActivityDetailedSidebar)\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { LoadingComponent } from \"../../../../app/layout/LoadingComponent\";\r\nimport { RootStoreContext } from \"../../../../app/stores/rootStore\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id);\r\n  }, [loadActivity, match.params.id, history]);\r\n\r\n  if (loadingInitial || !activity)\r\n    return <LoadingComponent content=\"Loading activit...\" />;\r\n\r\n  if (!activity) return <h2>Not found</h2>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} history={history}/>\r\n        <ActivityDetailedInfo activity={activity}/>\r\n        <ActivityDetailedChat/>\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar attendees={activity.attendees}/>  \r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n      <Segment placeholder>\r\n        <Header icon>\r\n          <Icon name=\"search\" />\r\n          Oops - We've looked everywhere but couldn't find this.\r\n        </Header>\r\n        <Segment.Inline>\r\n            <Button as={Link} to=\"/activities\" primary>\r\n                Return to Activities page\r\n            </Button>\r\n        </Segment.Inline>\r\n      </Segment>\r\n    );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react'\r\nimport { Modal } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../stores/rootStore'\r\n\r\nconst ModalContainer = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {modal:{open, body}, closeModal} =rootStore.modalStore;\r\n    return (\r\n    <Modal open={open} onClose={closeModal} size='mini'>\r\n      <Modal.Content > {body} </Modal.Content>\r\n    </Modal>\r\n    )\r\n}\r\n\r\nexport default observer(ModalContainer);\r\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport NavBar  from '../../features/nav/NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\n//import { render } from '@testing-library/react';\nimport { observer } from 'mobx-react-lite';\nimport { Route, RouteComponentProps, Switch, withRouter } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/dashboard/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/dashboard/details/ActivityDetails';\nimport { NotFound } from './NotFound';\nimport { LoginForm } from '../../features/user/LoginForm';\nimport { RootStoreContext } from '../stores/rootStore';\nimport { LoadingComponent } from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\n\n\nconst App :React.FC<RouteComponentProps> = ({location}) =>{\n  const rootStore = useContext(RootStoreContext);\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(()=>{\n    if(token){\n      getUser().finally(()=>setAppLoaded())\n    }else{\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token])\n\n  if(!appLoaded) return <LoadingComponent content=\"Loading app....\"/>\n  return (\n    <Fragment>\n      <ModalContainer/>\n      <ToastContainer position='bottom-right'/>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}> \n              <Switch>\n                <Route exact path=\"/activities\" component={ActivityDashboard} />\n                <Route path=\"/activities/:id\" component={ActivityDetails} />\n                <Route\n                  key={location.key}\n                  path={[\"/createActivity/\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <Route path=\"/login\" component={LoginForm}/>\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n}\n\nexport default withRouter(observer(App));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = ({children, location: {pathname}}: any) => {\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    },[pathname]);\r\n    \r\n    return children;\r\n        \r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Router} from 'react-router-dom';\nimport './app/layout/styles.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport {createBrowserHistory} from 'history';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport ScrollToTop from './app/layout/ScrollToTop';\nimport dateFnsLocalizer from 'react-widgets-date-fns';\n\nnew dateFnsLocalizer();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ScrollToTop>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}